{
  "openapi" : "3.0.2",
  "info" : {
    "version" : "1.0.0",
    "title" : "Cumulocity IoT OpenAPI",
    "description" : "# Introduction\nStandard OpenAPI specification, language-agnostic interface to the Cumulocity IoT RESTful API which allows – both humans and computers – to discover and understand the capabilities of the platform.\n\nCumulocity IoT uses HTTP and REST, which is today the most widely used interfacing technology and which works on any Internet-connected device ranging from small embedded microcontrollers up to desktop PCs. The secure variant, HTTPS, is used for the most security critical applications and will give you the best possible security.\n\nRegardless the communication originates from IoT devices, web applications or from back-office IT systems, Cumulocity IoT employs the protocol REST for all external communication. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication and verbs.\n### **Just Getting Started?**\nCumulocity IoT exposes its complete functionality through programming interfaces; this means that all of Cumulocity IoT’s functionality is available for you to use in different contexts outside of what the platform directly provides - in your own applications, in your own devices. Cumulocity IoT gives you very fast visibility and control over your remote assets, be these houses, cars, machines or any other assets that you want to manage.\n\nCheck out <a href=\"https://cumulocity.com/guides/concepts/introduction/\" target=\"_new\">our online guides</a> to learn more about the platform.\n# Authentication\nWhen you sign up for an account on the [Cumulocity IoT platform](https://cumulocity.com/), for example by using a free trial, you will be provided with a dedicated URL address for your tenant. All requests to the platform have to be authenticated employing your tenant ID, Cumulocity IoT user (c8yuser for short) and password. Cumulocity IoT offers the following forms of authentication:\n<ul><li>Basic authentication</li> <li>JWT token authentication</li> <li>OAuth authentication code grant</li></ul>\n\nCumulocity IoT also supports two factor authentication. For more details, see [Authentication](https://cumulocity.com/guides/reference/rest-implementation/#authentication) in the Reference Guide.\n# Roles\n**ToDo:** add details about the roles.\n# Response Codes\nCumulocity IoT uses conventional HTTP response codes to indicate the success or failure of an API request. Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted). Codes in the `5xx` range indicate an error with Cumulocity IoT's servers ([these are very rare](https://www.softwareag.cloud/site/sla/cumulocity-iot.html#/)).\n<table>\n  <caption>HTTP STATUS CODE SUMMARY</caption>\n  <tr><th>Code</th><th>Description</th></tr>\n  <tr><td>200 - OK</td><td>Everything worked as expected.</td></tr>\n  <tr><td>201 - Created</td><td>A managed object was created successfully.</td></tr>\n  <tr><td>204 - No content</td><td>A managed object was deleted successfully.</td></tr>\n  <tr><td>400 - Bad Request</td><td>The request was unacceptable, often due to missing a required parameter.</td></tr>\n  <tr><td>401 - Unauthorized</td><td>Authentication has failed, or credentials were required but not provided..</td></tr>\n  <tr><td>403 - Forbidden</td><td>The authenticated user doesn't have permissions to perform the request.</td></tr>\n  <tr><td>404 - Not Found</td><td>The requested resource doesn't exist.</td></tr>\n  <tr><td>405 - Method not allowed</td><td>The employed HTTP method cannot be used on this resource (e.g., using PUT on a read-only resource).</td></tr>\n  <tr><td>422 - Invalid data</td><td>Invalid data was sent on the request and/or a query could not be understood.</td></tr>\n  <tr><td>422 - Unprocessable Entity</td><td>The requested resource cannot be updated or mandatory fields are missing on the executed operation.</td></tr>\n  <tr><td>500, 503 - Server Errors</td><td>Something went wrong on Cumulocity IoT's end.</td></tr>\n</table>\n\nAll error codes and their interpretations can be found in [Error reporting](https://cumulocity.com/guides/reference/rest-implementation/#a-name-error-reporting-a-error-reporting) in the Reference guide.\n",
    "contact" : {
      "name" : "Cumulocity IoT",
      "url" : "https://www.cumulocity.com",
      "email" : "support@cumulocity.com"
    },
    "license" : {
      "name" : "Software AG Legal Notices",
      "url" : "https://cumulocity.com/guides/about-doc/legal/"
    }
  },
  "externalDocs" : {
    "description" : "Cumulocity IoT Guides",
    "url" : "https://cumulocity.com/guides/about-doc/intro-documentation/"
  },
  "servers" : [ {
    "description" : "Cumulocity IoT - test server",
    "url" : "https://glenn.cumulocity.com"
  }, {
    "description" : "Cumulocity IoT - test server",
    "url" : "https://aaron.cumulocity.com/"
  }, {
    "description" : "Cumulocity IoT Production Server",
    "url" : "https://api.cumulocity.com/"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/manasesjesus/c8y_openapi/1.0.0"
  } ],
  "security" : [ {
    "BasicAuthentication" : [ ]
  }, {
    "JWTAuthentication" : [ ]
  } ],
  "tags" : [ {
    "name" : "Alarm API",
    "description" : "The alarm API resource returns URIs and URI templates to collections of alarms, so that all alarms or alarms of a specified source device and/or status can be retrieved.\n"
  }, {
    "name" : "Alarms",
    "description" : "An alarm signals an event that requires manual action, for example, when the temperature of a fridge increases above a particular threshold.\n"
  }, {
    "name" : "Inventory API",
    "description" : "The inventory stores all master data related to devices, their configuration and their connections. It also contains all related assets (e.g. vehicles, machines, buildings) and their structure. The inventory API resource returns URIs and URI templates to collections of managed objects.\n"
  }, {
    "name" : "Managed Objects",
    "description" : "The inventory stores devices and other assets relevant to your IoT solution. We refer to them as managed objects and such can be “smart objects”, e.g. smart electricity meters, home automation gateways or GPS devices.\n"
  } ],
  "x-tagGroups" : [ {
    "name" : "Alarms",
    "tags" : [ "Alarm API", "Alarms" ]
  }, {
    "name" : "Inventory",
    "tags" : [ "Inventory API", "Managed Objects" ]
  } ],
  "paths" : {
    "/alarm" : {
      "get" : {
        "tags" : [ "Alarm API" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve URIs to collections of alarms",
        "operationId" : "getAlarmApi",
        "description" : "Retrieve URIs and URI templates to collections of alarms.<br><br> Required roles: **ROLE_ALARM_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the URIs are sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.alarmapi+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/alarm"
                      } ]
                    },
                    "alarms" : {
                      "description" : "Collection of all alarms",
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "allOf" : [ {
                            "$ref" : "#/components/x-descriptions/desc_self"
                          }, {
                            "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms"
                          } ]
                        },
                        "alarms" : {
                          "type" : "array",
                          "nullable" : true,
                          "items" : { },
                          "example" : null
                        }
                      }
                    },
                    "alarmsForSource" : {
                      "description" : "Read-only collection of all alarms for a particular source object. The placeholder {source} shall be a unique ID of an object in the inventory.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?source={source}"
                    },
                    "alarmsForStatus" : {
                      "description" : "Read-only collection of all alarms in a particular status. The placeholder {status} can be one of the following values: ACTIVE, ACKNOWLEDGED or CLEARED",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?status={status}"
                    },
                    "alarmsForSourceAndStatusAndTime" : {
                      "description" : "Read-only collection of all alarms for a particular source, status and time range.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?source={source}&status={status}&dateFrom={dateFrom}&dateTo={dateTo}"
                    },
                    "alarmsForStatusAndTime" : {
                      "description" : "Read-only collection of all alarms for a particular status and time range.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?status={status}&dateFrom={dateFrom}&dateTo={dateTo}"
                    },
                    "alarmsForSourceAndTime" : {
                      "description" : "Read-only collection of all alarms for a particular source and time range.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?source={source}&dateFrom={dateFrom}&dateTo={dateTo}"
                    },
                    "alarmsForTime" : {
                      "description" : "Read-only collection of all alarms for a particular time range.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?dateFrom={dateFrom}&dateTo={dateTo}"
                    },
                    "alarmsForSourceAndStatus" : {
                      "description" : "Read-only collection of all alarms for a particular source object in a particular status.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?source={source}&status={status}"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          }
        }
      }
    },
    "/alarm/alarms" : {
      "post" : {
        "tags" : [ "Alarms" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Create an alarm",
        "operationId" : "postAlarm",
        "description" : "An alarm must be associated to a source (managed object) identified by ID.<br> In general, each alarm may consist of:\n<ul><li>A status showing whether the alarm is ACTIVE, ACKNOWLEDGED or CLEARED.</li> <li>A time stamp to indicate when the alarm was last updated.</li> <li>The severity of the alarm: CRITICAL, MAJOR, MINOR or WARNING.</li> <li>A history of changes to the event in form of audit logs.</li></ul>\n\nRequired roles: **ROLE_ALARM_ADMIN** or **owner of the source**\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/vnd.com.nsn.cumulocity.alarm+json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "source", "type", "text", "severity", "time" ],
                "properties" : {
                  "source" : {
                    "required" : [ "id" ],
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/alarm_source"
                    }, {
                      "properties" : {
                        "id" : {
                          "allOf" : [ {
                            "$ref" : "#/components/x-descriptions/desc_objectId"
                          }, {
                            "example" : "251982"
                          } ]
                        }
                      }
                    } ]
                  },
                  "type" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/alarm_type"
                    }, {
                      "example" : "c8y_UnavailabilityAlarm"
                    } ]
                  },
                  "text" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/alarm_text"
                    }, {
                      "example" : "No data received from the device within the required interval."
                    } ]
                  },
                  "severity" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/alarm_severity"
                    }, {
                      "example" : "MAJOR"
                    } ]
                  },
                  "status" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/alarm_status"
                    }, {
                      "example" : "ACTIVE"
                    } ]
                  },
                  "time" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/alarm_time"
                    }, {
                      "example" : "2020-03-19T12:03:27.845Z"
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "An alarm was created successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_alarm_dateFrom"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_dateTo"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_resolved"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_severity"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_source"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_status"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_type"
        }, {
          "$ref" : "#/components/parameters/queryParam_currentPage"
        }, {
          "$ref" : "#/components/parameters/queryParam_pageSize"
        }, {
          "$ref" : "#/components/parameters/queryParam_withTotalPages"
        } ],
        "tags" : [ "Alarms" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all alarms",
        "operationId" : "getAlarms",
        "description" : "Retrieve all alarms on your tenant.<br><br> Required roles: **ROLE_ALARM_READ**\n",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/alarmCollectionFound"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          }
        }
      },
      "delete" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_alarm_dateFrom"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_dateTo"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_resolved"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_severity"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_source"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_status"
        }, {
          "$ref" : "#/components/parameters/queryParam_alarm_type"
        } ],
        "tags" : [ "Alarms" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Remove alarm collections",
        "operationId" : "deleteAlarms",
        "description" : "Remove alarm collections specified by query parameters.<br><br> **Important:** Note that it is possible to call this endpoint without providing any parameter - it will result in deleting all alarms and it is not recommended.<br><br> Required roles: **ROLE_ALARM_ADMIN**\n",
        "responses" : {
          "204" : {
            "description" : "A collection of alarms was deleted successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "405" : {
            "description" : "Not authorized to perform this operation.",
            "links" : { }
          }
        }
      }
    },
    "/alarm/alarms/count" : {
      "get" : {
        "tags" : [ "Alarms" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve the total number of alarms",
        "operationId" : "getAlarmsCount",
        "description" : "Count the total number of all active alarms in your tenant.<br><br> Required roles: **ROLE_ALARM_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the total number of alarms is sent in the response.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          }
        }
      }
    },
    "/alarm/alarms/{id}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/alarmId"
      } ],
      "get" : {
        "tags" : [ "Alarms" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve a specific alarm",
        "operationId" : "getAlarmById",
        "description" : "Retrieve a specific alarm by a given ID.<br><br> Required roles: **ROLE_ALARM_READ**\n",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/alarmFound"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/alarmNotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Alarms" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Remove a specific alarm",
        "operationId" : "deleteAlarmById",
        "description" : "Remove a specific alarm by a given ID.<br><br> Required roles: **ROLE_ALARM_ADMIN**\n",
        "responses" : {
          "204" : {
            "description" : "An alarm was deleted successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/alarmNotFound"
          },
          "405" : {
            "description" : "Not authorized to perform this operation.",
            "links" : { }
          }
        }
      }
    },
    "/inventory" : {
      "get" : {
        "tags" : [ "Inventory API" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve URIs to collections of managed objects",
        "operationId" : "getInventoryApi",
        "description" : "Retrieve URIs and URI templates to collections of managed objects.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the URIs are sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.inventoryapi+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory"
                      } ]
                    },
                    "managedObjectsForFragmentType" : {
                      "description" : "Read-only collection of all managed objects with a particular fragment type or capability (placeholder {fragmentType}).",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects?fragmentType={fragmentType}"
                    },
                    "managedObjectsForType" : {
                      "description" : "Read-only collection of all managed objects of a particular type (placeholder {type}).",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects?type={type}"
                    },
                    "managedObjectsForListOfIds" : {
                      "description" : "Read-only collection of managed objects fetched for a given list of ids, e.g. “ids=41,43,68”.",
                      "type" : "string",
                      "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects?ids={ids}"
                    },
                    "managedObjects" : {
                      "description" : "Collection of all managed objects",
                      "type" : "object",
                      "properties" : {
                        "self" : {
                          "allOf" : [ {
                            "$ref" : "#/components/x-descriptions/desc_self"
                          }, {
                            "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects"
                          } ]
                        },
                        "references" : {
                          "description" : " ",
                          "type" : "array",
                          "minItems" : 0,
                          "items" : { },
                          "example" : [ ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          }
        }
      }
    },
    "/inventory/managedObjects" : {
      "post" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Create a managed object",
        "operationId" : "postManagedObject",
        "description" : "Create a new managed object, e.g. a device with temperature measurements support or a binary switch.<br> In general, each managed object may consist of:\n<ul><li>A unique identifier that references the object.</li> <li>The name of the object.</li> <li>A time stamp showing the last update.</li> <li>Additional fragments.</li></ul>\n\nImagine, for example, that you want to describe electric meters from different vendors. Depending on the make of the meter, one may have a relay and one may be capable to measure a single phase or three phases (e.g. a three-phase electricity sensor). A fragment `c8y_ThreePhaseElectricitySensor` would identify such electric meter. Devices'  characteristics are identified by storing fragments for each of them.<br><br>\nRequired roles: **ROLE_INVENTORY_ADMIN** or **ROLE_INVENTORY_CREATE**\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/vnd.com.nsn.cumulocity.managedObject+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "Smart Thermometer"
                  },
                  "c8y_SupportedMeasurements" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/desc_c8y_SupportedMeasurements"
                    }, {
                      "example" : [ "c8y_TemperatureMeasurement" ]
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "A managed object was created successfully.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobject+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_objectId"
                      }, {
                        "example" : 251982
                      } ]
                    },
                    "name" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_objectName"
                      }, {
                        "example" : "Smart Thermometer"
                      } ]
                    },
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}"
                      } ]
                    },
                    "creationTime" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_objectCreationTime"
                      }, {
                        "example" : "2020-03-10T17:11:07.025Z"
                      } ]
                    },
                    "lastUpdated" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_objectLastUpdated"
                      }, {
                        "example" : "2020-03-10T17:11:07.025Z"
                      } ]
                    },
                    "c8y_SupportedMeasurements" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_c8y_SupportedMeasurements"
                      }, {
                        "example" : [ "c8y_TemperatureMeasurement" ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_currentPage"
        }, {
          "$ref" : "#/components/parameters/queryParam_fragmentType"
        }, {
          "$ref" : "#/components/parameters/queryParam_pageSize"
        }, {
          "$ref" : "#/components/parameters/queryParam_query"
        }, {
          "$ref" : "#/components/parameters/queryParam_skipChildrenNames"
        }, {
          "$ref" : "#/components/parameters/queryParam_withParents"
        }, {
          "$ref" : "#/components/parameters/queryParam_withTotalPages"
        } ],
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all managed objects",
        "operationId" : "getManagedObjects",
        "description" : "Retrieve all managed objects (e.g. devices, assets, etc.) registered in your tenant.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/inventoryObjectCollectionFound"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/count" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/queryParam_fragmentType"
      }, {
        "$ref" : "#/components/parameters/queryParam_query"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve the total number of managed objects",
        "operationId" : "getManagedObjectsCount",
        "description" : "Retrieve the total number of managed objects (e.g. devices, assets, etc.) registered in your tenant.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the total number of managed objects is sent in the response.",
            "links" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Total number of managed objects registered in your tenant.",
                  "type" : "number",
                  "minimum" : 0,
                  "example" : 38
                }
              },
              "text/plain" : {
                "schema" : {
                  "description" : "Total number of managed objects registered in your tenant.",
                  "type" : "string",
                  "minLength" : 0,
                  "example" : 38
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      } ],
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_skipChildrenNames"
        }, {
          "$ref" : "#/components/parameters/queryParam_withParents"
        } ],
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve a specific managed object",
        "operationId" : "getManagedObjectById",
        "description" : "Retrieve a specific managed object (e.g. device, group, template) by a given ID.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/inventoryObjectFound"
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      },
      "put" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Update a specific managed object",
        "operationId" : "putManagedObject",
        "description" : "Update a specific managed object (e.g. device) by a given ID.<br><br> For example, if you want to specify that your managed object is a device, you would need to add the fragment `c8y_IsDevice`.<br><br> Required roles: **ROLE_INVENTORY_ADMIN**\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/vnd.com.nsn.cumulocity.managedObject+json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "c8y_IsDevice" : {
                    "allOf" : [ {
                      "$ref" : "#/components/x-descriptions/desc_objectC8y_IsDevice"
                    }, {
                      "example" : { }
                    } ]
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A managed object was updated successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      },
      "delete" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Delete a specific managed object",
        "operationId" : "deleteManagedObject",
        "description" : "Delete a specific managed object (e.g. device) by a given ID.<br><br> Required roles: **ROLE_INVENTORY_ADMIN**\n",
        "responses" : {
          "204" : {
            "description" : "A managed object was deleted successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/availability" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      }, {
        "$ref" : "#/components/parameters/queryParam_query"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve the latest availability date of a specific managed object",
        "operationId" : "getManagedObjectAvailability",
        "description" : "Retrieve the date when a specific managed object (by a given ID) sent the last message to Cumulocity IoT.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the date is sent in the response.",
            "links" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "Latest availability date of a specific managed object.",
                  "type" : "string",
                  "example" : "2019-08-08T08:36:32.896Z"
                }
              },
              "text/plain" : {
                "schema" : {
                  "description" : "Latest availability date of a specific managed object.",
                  "type" : "string",
                  "example" : "2019-08-08T08:36:32.896Z"
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/childAdditions" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      } ],
      "post" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Assign a specific managed object a child addition",
        "operationId" : "postManagedObjectChildAddition",
        "description" : "Assign a specific managed object (by a given child ID) as child addition of another managed object (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_ADMIN** or **ROLE_INVENTORY_CREATE**\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "managedObject" ],
                "properties" : {
                  "managedObject" : {
                    "type" : "object",
                    "required" : [ "id" ],
                    "properties" : {
                      "id" : {
                        "allOf" : [ {
                          "$ref" : "#/components/x-descriptions/desc_objectId"
                        }, {
                          "example" : "{childId}"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "A managed object was successfully assigned as child addition.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_currentPage"
        }, {
          "$ref" : "#/components/parameters/queryParam_pageSize"
        }, {
          "$ref" : "#/components/parameters/queryParam_query"
        }, {
          "$ref" : "#/components/parameters/queryParam_withTotalPages"
        } ],
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all child additions of a specific managed object",
        "operationId" : "getManagedObjectChildAdditions",
        "description" : "Retrieve all child additions of a specific managed object by a given ID.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and all child additions are sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "prev" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_prevPage"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAdditions?pageSize=5&currentPage=1"
                      } ]
                    },
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAdditions?pageSize=5&currentPage=2"
                      } ]
                    },
                    "next" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_nextPage"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAdditions?pageSize=5&currentPage=3"
                      } ]
                    },
                    "references" : {
                      "description" : "An array containing the details of all child additions (if any).",
                      "type" : "array",
                      "minItems" : 0,
                      "items" : {
                        "properties" : {
                          "managedObject" : {
                            "$ref" : "#/components/schemas/managedObject"
                          }
                        }
                      }
                    },
                    "statistics" : {
                      "$ref" : "#/components/schemas/pageStatistics"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/childAdditions/{childId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      }, {
        "$ref" : "#/components/parameters/managedObjectChildId"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve a specific child addition of a specific managed object",
        "operationId" : "getManagedObjectChildAddition",
        "description" : "Retrieve a specific child addition (by a given child ID) of a specific managed object (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the child addition is sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectreference+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "managedObject" : {
                      "$ref" : "#/components/schemas/managedObject"
                    },
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAdditions/{childId}"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidChildId"
          }
        }
      },
      "delete" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Remove a specific child addition from its parent",
        "operationId" : "deleteManagedObjectChildAddition",
        "description" : "Remove a specific child addition (by a given child ID) from its parent (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_ADMIN**\n",
        "responses" : {
          "204" : {
            "description" : "A child addition was removed successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidChildId"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/childAssets" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      } ],
      "post" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Assign a specific managed object a child asset",
        "operationId" : "postManagedObjectChildAsset",
        "description" : "Assign a specific managed object (by a given child ID) as child asset of another managed object (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_ADMIN** or **ROLE_INVENTORY_CREATE**\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "managedObject" ],
                "properties" : {
                  "managedObject" : {
                    "type" : "object",
                    "required" : [ "id" ],
                    "properties" : {
                      "id" : {
                        "allOf" : [ {
                          "$ref" : "#/components/x-descriptions/desc_objectId"
                        }, {
                          "example" : "{childId}"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "A managed object was successfully assigned as child asset.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_currentPage"
        }, {
          "$ref" : "#/components/parameters/queryParam_pageSize"
        }, {
          "$ref" : "#/components/parameters/queryParam_query"
        }, {
          "$ref" : "#/components/parameters/queryParam_withTotalPages"
        } ],
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all child assets of a specific managed object",
        "operationId" : "getManagedObjectChildAssets",
        "description" : "Retrieve all child assets of a specific managed object by a given ID.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and all child assets are sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAssets"
                      } ]
                    },
                    "references" : {
                      "description" : "An array containing the details of all child assets (if any).",
                      "type" : "array",
                      "minItems" : 0,
                      "items" : { },
                      "example" : [ ]
                    },
                    "statistics" : {
                      "allOf" : [ {
                        "$ref" : "#/components/schemas/pageStatistics"
                      }, {
                        "example" : {
                          "currentPage" : 1,
                          "pageSize" : 5
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/childAssets/{childId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      }, {
        "$ref" : "#/components/parameters/managedObjectChildId"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve a specific child asset of a specific managed object",
        "operationId" : "getManagedObjectChildAsset",
        "description" : "Retrieve a specific child asset (by a given child ID) of a specific managed object (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the child asset is sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectreference+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "managedObject" : {
                      "$ref" : "#/components/schemas/managedObject"
                    },
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAssets/{childId}"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidChildId"
          }
        }
      },
      "delete" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Remove a specific child asset from its parent",
        "operationId" : "deleteManagedObjectChildAsset",
        "description" : "Remove a specific child asset (by a given child ID) from its parent (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_ADMIN**\n",
        "responses" : {
          "204" : {
            "description" : "A child asset was removed successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidChildId"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/childDevices" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      } ],
      "post" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Assign a specific managed object a child device",
        "operationId" : "postManagedObjectChildDevice",
        "description" : "Assign a specific managed object (by a given child ID) as child device of another managed object (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_ADMIN** or **ROLE_INVENTORY_CREATE**\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "managedObject" ],
                "properties" : {
                  "managedObject" : {
                    "type" : "object",
                    "required" : [ "id" ],
                    "properties" : {
                      "id" : {
                        "allOf" : [ {
                          "$ref" : "#/components/x-descriptions/desc_objectId"
                        }, {
                          "example" : "{childId}"
                        } ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "A managed object was successfully assigned as child device.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      },
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/queryParam_currentPage"
        }, {
          "$ref" : "#/components/parameters/queryParam_pageSize"
        }, {
          "$ref" : "#/components/parameters/queryParam_query"
        }, {
          "$ref" : "#/components/parameters/queryParam_withTotalPages"
        } ],
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all child devices of a specific managed object",
        "operationId" : "getManagedObjectChildDevices",
        "description" : "Retrieve all child devices of a specific managed object by a given ID.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and all child devices are sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectreferencecollection+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "prev" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_prevPage"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childDevices?pageSize=5&currentPage=1"
                      } ]
                    },
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childDevices?pageSize=5&currentPage=2"
                      } ]
                    },
                    "next" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_nextPage"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childDevices?pageSize=5&currentPage=3"
                      } ]
                    },
                    "references" : {
                      "description" : "An array containing the details of all child devices (if any).",
                      "type" : "array",
                      "minItems" : 0,
                      "items" : {
                        "properties" : {
                          "managedObject" : {
                            "$ref" : "#/components/schemas/managedObject"
                          }
                        }
                      }
                    },
                    "statistics" : {
                      "$ref" : "#/components/schemas/pageStatistics"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/childDevices/{childId}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      }, {
        "$ref" : "#/components/parameters/managedObjectChildId"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve a specific child device of a specific managed object",
        "operationId" : "getManagedObjectChildDevice",
        "description" : "Retrieve a specific child device (by a given child ID) of a specific managed object (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the child device is sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectreference+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "managedObject" : {
                      "$ref" : "#/components/schemas/managedObject"
                    },
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childDevices/{childId}"
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidChildId"
          }
        }
      },
      "delete" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Remove a specific child device from its parent",
        "operationId" : "deleteManagedObjectChildDevice",
        "description" : "Remove a specific child device (by a given child ID) from its parent (by a given ID).<br><br> Required roles: **ROLE_INVENTORY_ADMIN**\n",
        "responses" : {
          "204" : {
            "description" : "A child device was removed successfully.",
            "links" : { }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidChildId"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/supportedMeasurements" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      }, {
        "$ref" : "#/components/parameters/queryParam_query"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all measurements of a specific managed object",
        "operationId" : "getManagedObjectSupportedMeasurements",
        "description" : "Retrieve all supported measurements of a specific managed object by a given ID.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and all supported measurements are sent in the response.",
            "links" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "c8y_SupportedMeasurements" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_c8y_SupportedMeasurements"
                      }, {
                        "example" : [ "c8y_MemoryMeasurement", "c8y_CPUMeasurement" ]
                      } ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/supportedSeries" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      }, {
        "$ref" : "#/components/parameters/queryParam_query"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve all supported series of a specific managed object",
        "operationId" : "getManagedObjectSupportedSeries",
        "description" : "Retrieve all supported series of a specific managed object by a given ID.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and all supported series are sent in the response.",
            "links" : { },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "c8y_SupportedSeries" : {
                      "description" : "An array containing all supported series of the specified device.",
                      "type" : "array",
                      "items" : { },
                      "example" : [ "c8y_MemoryMeasurement.Total", "c8y_CPUMeasurement.Workload", "c8y_MemoryMeasurement.Used" ]
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          },
          "422" : {
            "$ref" : "#/components/responses/invalidData"
          }
        }
      }
    },
    "/inventory/managedObjects/{id}/user" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/managedObjectId"
      } ],
      "get" : {
        "tags" : [ "Managed Objects" ],
        "security" : [ {
          "BasicAuthentication" : [ ]
        } ],
        "summary" : "Retrieve the username and status of a specific managed object",
        "operationId" : "getManagedObjectUsernameAndStatus",
        "description" : "Retrieve the device's owner's username of a specific managed object (by a given ID) and if it is enabled for that managed object.<br><br> Required roles: **ROLE_INVENTORY_READ**\n",
        "responses" : {
          "200" : {
            "description" : "The request has succeeded and the username and status are sent in the response.",
            "links" : { },
            "content" : {
              "application/vnd.com.nsn.cumulocity.managedobjectuser+json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "self" : {
                      "allOf" : [ {
                        "$ref" : "#/components/x-descriptions/desc_self"
                      }, {
                        "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/user"
                      } ]
                    },
                    "userName" : {
                      "description" : "The username of the device's owner.",
                      "type" : "string",
                      "minLength" : 1,
                      "example" : "manga"
                    },
                    "enabled" : {
                      "description" : "Specifies if the device's owner is enabled or not.",
                      "type" : "boolean",
                      "example" : true
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "$ref" : "#/components/responses/unauthorizedError"
          },
          "404" : {
            "$ref" : "#/components/responses/inventoryObjectNotFound"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "BasicAuthentication" : {
        "description" : "The authorization header is formed as `Basic <Base64(<tenantID>/<c8yuser>:<password>)>`. For instance, if your tenantID, username and password are **t0071234**, **testuser** and **secret123** respectively, you can generate the Base64 string with the following command:\n\n  ```shell\n  $ echo -n t0071234/testuser:secret123 | base64\n  ```\n\n  and your authorization header would look like\n\n  ```\n  \"Authorization\": \"Basic dDAwNzEyMzQvdGVzdHVzZXI6c2VjcmV0MTIz\"\n  ```\n\n  On UI interfaces, your username name shall be plain text in the format `<tenantID>/<c8yuser>`.\n",
        "type" : "http",
        "scheme" : "basic"
      },
      "JWTAuthentication" : {
        "description" : "Cumulocity IoT supports JWT token authentication. The HTTP header must include:\n```\n  \"Authorization\": \"Bearer <<Base64 encoded JWT token>>\"\n```\nThe JWT token must be signed using RSA signature with SHA-256 (RS256).\nThe minimal RSA key size is 512 bit.\nYou must upload your public key to the tenant options on the “token.publicKey” category.\n",
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "parameters" : {
      "alarmId" : {
        "name" : "id",
        "in" : "path",
        "description" : "Unique identifier of the alarm.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : 20200301
        }
      },
      "managedObjectId" : {
        "name" : "id",
        "in" : "path",
        "description" : "Unique identifier of the object.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : 251982
        }
      },
      "managedObjectChildId" : {
        "name" : "childId",
        "in" : "path",
        "description" : "Unique identifier of the child object.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : 72022
        }
      },
      "queryParam_currentPage" : {
        "name" : "currentPage",
        "in" : "query",
        "description" : "The current page of the paginated results.",
        "schema" : {
          "type" : "number",
          "minimum" : 1,
          "default" : 1,
          "example" : 3
        }
      },
      "queryParam_fragmentType" : {
        "name" : "fragmentType",
        "in" : "query",
        "description" : "A characteristic which identifies a managed object, e.g. geolocation, electricity sensor, relay state.",
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : "c8y_IsDevice"
        }
      },
      "queryParam_pageSize" : {
        "name" : "pageSize",
        "in" : "query",
        "description" : "Indicates how many entries of the collection shall be returned. The upper limit for one page is 2,000 objects.",
        "schema" : {
          "type" : "number",
          "minimum" : 1,
          "maximum" : 2000,
          "default" : 5,
          "example" : 10
        }
      },
      "queryParam_skipChildrenNames" : {
        "name" : "skipChildrenNames",
        "in" : "query",
        "description" : "When set to true, the returned references of child devices won't contain their names.",
        "schema" : {
          "type" : "boolean",
          "default" : false,
          "example" : true
        }
      },
      "queryParam_query" : {
        "name" : "query",
        "in" : "query",
        "description" : "Use query language to perform operations and/or filter the results. Details about the properties and supported operations can be found in [Query language](https://cumulocity.com/guides/reference/inventory/#query-language) on the Reference guide.\n",
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : "$filter=(owner+eq+'manga')"
        }
      },
      "queryParam_withParents" : {
        "name" : "withParents",
        "in" : "query",
        "description" : "When set to true, the returned references of child parents will return the device's parents (if any). Otherwise, it will be an empty array.",
        "schema" : {
          "type" : "boolean",
          "default" : false,
          "example" : true
        }
      },
      "queryParam_withTotalPages" : {
        "name" : "withTotalPages",
        "in" : "query",
        "description" : "When set to true, the returned result will contain in the statistics object the total number of pages (at the expense of slightly slower performance).",
        "schema" : {
          "type" : "boolean",
          "default" : false,
          "example" : true
        }
      },
      "queryParam_alarm_type" : {
        "name" : "type",
        "in" : "query",
        "description" : "The type of alarm to search for.",
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : "c8y_UnavailabilityAlarm"
        }
      },
      "queryParam_alarm_source" : {
        "name" : "source",
        "in" : "query",
        "description" : "The managed object ID to which the alarm is associated.",
        "schema" : {
          "type" : "string",
          "minLength" : 1,
          "example" : 251994
        }
      },
      "queryParam_alarm_resolved" : {
        "name" : "resolved",
        "in" : "query",
        "description" : "When set to `true` only alarms with status CLEARED will be fetched, whereas `false` will fetch all alarms with status ACTIVE or ACKNOWLEDGED.",
        "schema" : {
          "type" : "boolean",
          "default" : false,
          "example" : true
        }
      },
      "queryParam_alarm_severity" : {
        "name" : "severity",
        "in" : "query",
        "description" : "The severity of the alarm to search for.",
        "schema" : {
          "type" : "string",
          "enum" : [ "CRITICAL", "MAJOR", "MINOR", "WARNING" ],
          "example" : "MAJOR"
        }
      },
      "queryParam_alarm_status" : {
        "name" : "status",
        "in" : "query",
        "description" : "The status of the alarm to search for.",
        "schema" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "ACKNOWLEDGED", "CLEARED" ],
          "example" : "ACKNOWLEDGED"
        }
      },
      "queryParam_alarm_dateFrom" : {
        "name" : "dateFrom",
        "in" : "query",
        "description" : "Start date or date and time of the alarm occurrence.",
        "schema" : {
          "type" : "string",
          "format" : "date-time",
          "minLength" : 1,
          "example" : "2020-03-01"
        }
      },
      "queryParam_alarm_dateTo" : {
        "name" : "dateTo",
        "in" : "query",
        "description" : "End date or date and time of the alarm occurrence.",
        "schema" : {
          "type" : "string",
          "format" : "date-time",
          "minLength" : 1,
          "example" : "2020-03-01"
        }
      }
    },
    "responses" : {
      "unauthorizedError" : {
        "description" : "Authentication information is missing or invalid.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.error+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XError"
                  }, {
                    "example" : "security/Unauthorized"
                  } ]
                },
                "message" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XMessage"
                  }, {
                    "example" : "Invalid credentials! : Bad credentials"
                  } ]
                },
                "info" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XInfo"
                  }, {
                    "example" : "https://www.cumulocity.com/guides/reference-guide/#error_reporting"
                  } ]
                }
              }
            }
          }
        }
      },
      "invalidData" : {
        "description" : "Invalid data was sent.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.error+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XError"
                  }, {
                    "example" : "inventory/Invalid Data"
                  } ]
                },
                "message" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XMessage"
                  }, {
                    "example" : "Find by filter query failed : Query could not be understood."
                  } ]
                },
                "info" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XInfo"
                  }, {
                    "example" : "https://www.cumulocity.com/guides/reference-guide/#error_reporting"
                  } ]
                }
              }
            }
          }
        }
      },
      "invalidChildId" : {
        "description" : "Invalid data was sent.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.error+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XError"
                  }, {
                    "example" : "inventory/Invalid Data"
                  } ]
                },
                "message" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XMessage"
                  }, {
                    "example" : "managedObject 10213 is not a child of 10215"
                  } ]
                },
                "info" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XInfo"
                  }, {
                    "example" : "https://www.cumulocity.com/guides/reference-guide/#error_reporting"
                  } ]
                }
              }
            }
          }
        }
      },
      "inventoryObjectCollectionFound" : {
        "description" : "The request has succeeded and the collection of objects is sent in the response.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.managedobjectcollection+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "prev" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_prevPage"
                  }, {
                    "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects?pageSize=5&currentPage=1"
                  } ]
                },
                "self" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_self"
                  }, {
                    "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects?pageSize=5&currentPage=2"
                  } ]
                },
                "next" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_nextPage"
                  }, {
                    "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects?pageSize=5&currentPage=3"
                  } ]
                },
                "statistics" : {
                  "$ref" : "#/components/schemas/pageStatistics"
                },
                "managedObjects" : {
                  "description" : "An array containing the results (managed objects) of the request.",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/managedObject"
                  }
                }
              }
            }
          }
        }
      },
      "inventoryObjectDeleted" : {
        "description" : "A managed object was deleted successfully.",
        "links" : { }
      },
      "inventoryObjectFound" : {
        "description" : "The request has succeeded and the object is sent in the response.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.managedobject+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/managedObject"
            }
          }
        }
      },
      "inventoryObjectNotFound" : {
        "description" : "Managed object not found.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.error+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XError"
                  }, {
                    "example" : "inventory/Not Found"
                  } ]
                },
                "message" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XMessage"
                  }, {
                    "example" : "Finding device data from database failed"
                  } ]
                },
                "info" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XInfo"
                  }, {
                    "example" : "https://www.cumulocity.com/guides/reference-guide/#error_reporting"
                  } ]
                }
              }
            }
          }
        }
      },
      "alarmCollectionFound" : {
        "description" : "The request has succeeded and all alarms are sent in the response.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.alarmcollection+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "prev" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_prevPage"
                  }, {
                    "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?pageSize=5&currentPage=1"
                  } ]
                },
                "self" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_self"
                  }, {
                    "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?pageSize=5&currentPage=2"
                  } ]
                },
                "next" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_nextPage"
                  }, {
                    "example" : "PROTOCOL://TENANT_DOMAIN/alarm/alarms?pageSize=5&currentPage=3"
                  } ]
                },
                "statistics" : {
                  "$ref" : "#/components/schemas/pageStatistics"
                },
                "alarms" : {
                  "description" : "An array containing the results (alarms) of the request.",
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/alarm"
                  }
                }
              }
            }
          }
        }
      },
      "alarmFound" : {
        "description" : "The request has succeeded and the alarm is sent in the response.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.alarm+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/alarm"
            }
          }
        }
      },
      "alarmNotFound" : {
        "description" : "Alarm not found.",
        "links" : { },
        "content" : {
          "application/vnd.com.nsn.cumulocity.error+json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XError"
                  }, {
                    "example" : "alarm/Not Found"
                  } ]
                },
                "message" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XMessage"
                  }, {
                    "example" : "Finding alarm from database failed"
                  } ]
                },
                "info" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_40XInfo"
                  }, {
                    "example" : "https://www.cumulocity.com/guides/reference-guide/#error_reporting"
                  } ]
                }
              }
            }
          }
        }
      }
    },
    "x-descriptions" : {
      "desc_40XError" : {
        "description" : "The type of error returned.",
        "type" : "string"
      },
      "desc_40XMessage" : {
        "description" : "A human-readable message providing more details about the error.",
        "type" : "string"
      },
      "desc_40XInfo" : {
        "description" : "A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the error code reported.",
        "type" : "string"
      },
      "desc_c8y_SupportedMeasurements" : {
        "description" : "An array containing all supported measurements of the specified managed object.",
        "type" : "array",
        "items" : { }
      },
      "desc_objectId" : {
        "description" : "Unique identifier of the object.",
        "type" : "string"
      },
      "desc_objectName" : {
        "description" : "Human-readable name that is used for representing the object in user interfaces.",
        "type" : "string"
      },
      "desc_objectCreationTime" : {
        "description" : "The date and time when the object was created.",
        "type" : "string",
        "format" : "date-time"
      },
      "desc_objectLastUpdated" : {
        "description" : "The date and time when the object was updated for the last time.",
        "type" : "string",
        "format" : "date-time"
      },
      "desc_objectC8y_IsDevice" : {
        "description" : "Marks devices that can be managed using Cumulocity IoT’s Device Management application.",
        "type" : "object"
      },
      "desc_self" : {
        "description" : "Link to this resource.",
        "type" : "string"
      },
      "desc_prevPage" : {
        "description" : "A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] to a potential previous page of managed objects.",
        "type" : "string"
      },
      "desc_nextPage" : {
        "description" : "A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] to a potential next page of managed objects.",
        "type" : "string"
      },
      "alarm_source" : {
        "description" : "The managed object to which the alarm is associated.",
        "type" : "object"
      },
      "alarm_type" : {
        "description" : "Identifies the type of this alarm.",
        "type" : "string"
      },
      "alarm_text" : {
        "description" : "Description of the alarm.",
        "type" : "string"
      },
      "alarm_severity" : {
        "description" : "The severity of the alarm.",
        "type" : "string",
        "enum" : [ "CRITICAL", "MAJOR", "MINOR", "WARNING" ]
      },
      "alarm_status" : {
        "description" : "The status of the alarm. If not specified, a new alarm will be created as ACTIVE.",
        "type" : "string",
        "enum" : [ "ACTIVE", "ACKNOWLEDGED", "CLEARED" ]
      },
      "alarm_time" : {
        "description" : "The date and time when the alarm is triggered.",
        "type" : "string"
      },
      "alarm_creationTime" : {
        "description" : "The date and time when the alarm was created.",
        "type" : "string",
        "format" : "date-time"
      },
      "alarm_count" : {
        "description" : "Number of times that this alarm has been triggered.",
        "type" : "string"
      },
      "alarm_id" : {
        "description" : "Unique identifier of the alarm.",
        "type" : "string"
      }
    },
    "schemas" : {
      "alarm" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_count"
            }, {
              "example" : 1
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_creationTime"
            }, {
              "example" : "2020-03-19T12:16:31.586Z"
            } ]
          },
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_id"
            }, {
              "example" : 20200301
            } ]
          },
          "severity" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_severity"
            }, {
              "example" : "MAJOR"
            } ]
          },
          "source" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_source"
            }, {
              "properties" : {
                "id" : {
                  "allOf" : [ {
                    "$ref" : "#/components/x-descriptions/desc_objectId"
                  }, {
                    "example" : "251982"
                  } ]
                }
              }
            } ]
          },
          "status" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_status"
            }, {
              "example" : "ACTIVE"
            } ]
          },
          "text" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_text"
            }, {
              "example" : "No data received from the device within the required interval."
            } ]
          },
          "time" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_time"
            }, {
              "example" : "2020-03-19T00:00:00.000Z"
            } ]
          },
          "type" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/alarm_type"
            }, {
              "example" : "c8y_UnavailabilityAlarm"
            } ]
          }
        }
      },
      "managedObject" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/desc_objectId"
            }, {
              "example" : 51994
            } ]
          },
          "self" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/desc_self"
            }, {
              "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}"
            } ]
          },
          "name" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/desc_objectName"
            }, {
              "example" : "My tracking device"
            } ]
          },
          "creationTime" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/desc_objectCreationTime"
            }, {
              "example" : "2017-12-12T22:09:06.881+01:00"
            } ]
          },
          "lastUpdated" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/desc_objectLastUpdated"
            }, {
              "example" : "2018-07-19T12:01:50.731Z"
            } ]
          },
          "c8y_IsDevice" : {
            "allOf" : [ {
              "$ref" : "#/components/x-descriptions/desc_objectC8y_IsDevice"
            }, {
              "example" : { }
            } ]
          },
          "childDevices" : {
            "$ref" : "#/components/schemas/objectChildDevices"
          },
          "childAdditions" : {
            "$ref" : "#/components/schemas/objectChildAdditions"
          },
          "childAssets" : {
            "$ref" : "#/components/schemas/objectChildAssets"
          },
          "deviceParents" : {
            "$ref" : "#/components/schemas/objectDeviceParents"
          },
          "assetParents" : {
            "$ref" : "#/components/schemas/objectAssetParents"
          }
        }
      },
      "objectAssetParents" : {
        "description" : "A collection of references to asset parent objects.",
        "type" : "object",
        "properties" : {
          "self" : {
            "description" : "Link to this resource's asset parent objects.",
            "type" : "string",
            "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/assetParents"
          },
          "references" : {
            "description" : "An array with the references to asset parent objects.",
            "type" : "array",
            "items" : { },
            "example" : [ ]
          }
        }
      },
      "objectChildAdditions" : {
        "description" : "A collection of references to child additions.",
        "type" : "object",
        "properties" : {
          "self" : {
            "description" : "Link to this resource's child additions.",
            "type" : "string",
            "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAdditions"
          },
          "references" : {
            "description" : "An array with the references to child devices.",
            "type" : "array",
            "items" : { },
            "example" : [ ]
          }
        }
      },
      "objectChildAssets" : {
        "description" : "A collection of references to child assets.",
        "type" : "object",
        "properties" : {
          "self" : {
            "description" : "Link to this resource's child assets.",
            "type" : "string",
            "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childAssets"
          },
          "references" : {
            "description" : "An array with the references to child assets.",
            "type" : "array",
            "items" : { },
            "example" : [ ]
          }
        }
      },
      "objectChildDevices" : {
        "description" : "A collection of references to child devices.",
        "type" : "object",
        "properties" : {
          "self" : {
            "description" : "Link to this resource's child devices.",
            "type" : "string",
            "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/childDevices"
          },
          "references" : {
            "description" : "An array with the references to child devices.",
            "type" : "array",
            "items" : { },
            "example" : [ ]
          }
        }
      },
      "objectDeviceParents" : {
        "description" : "A collection of references to device parent objects.",
        "type" : "object",
        "properties" : {
          "self" : {
            "description" : "Link to this resource's parent objects.",
            "type" : "string",
            "example" : "PROTOCOL://TENANT_DOMAIN/inventory/managedObjects/{id}/deviceParents"
          },
          "references" : {
            "description" : "An array with the references to parent objects.",
            "type" : "array",
            "items" : { },
            "example" : [ ]
          }
        }
      },
      "pageStatistics" : {
        "description" : "Information about paging statistics.",
        "type" : "object",
        "properties" : {
          "totalPages" : {
            "description" : "The total number of pages.",
            "type" : "number",
            "minimum" : 1,
            "example" : 3
          },
          "currentPage" : {
            "description" : "The current page of the paginated results.",
            "type" : "number",
            "minimum" : 1,
            "example" : 2
          },
          "pageSize" : {
            "description" : "Indicates the number of objects that the collection may contain per page. The upper limit for one page is 2,000 objects.",
            "type" : "number",
            "minimum" : 1,
            "maximum" : 2000,
            "example" : 5
          }
        }
      }
    }
  }
}